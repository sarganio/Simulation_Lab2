//
// Generated file, do not edit! Created by nedtool 5.6 from ARP.msg.
//

#ifndef __ARP_M_H
#define __ARP_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>ARP.msg:18</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet ARP
 * {
 *     unsigned short opcode;
 *     unsigned char srcMAC[8];//e.g. 01-23-45-67-89-AB-CD-EF
 *     unsigned char srcIP[4];//e.g. 172.168.32.1
 *     unsigned char trgMAC[8];//e.g. 01-23-45-67-89-AB-CD-EF
 *     unsigned char trgIP[4];//e.g. 172.168.32.1
 * }
 * </pre>
 */
class ARP : public ::omnetpp::cPacket
{
  protected:
    unsigned short opcode;
    unsigned char srcMAC[8];
    unsigned char srcIP[4];
    unsigned char trgMAC[8];
    unsigned char trgIP[4];

  private:
    void copy(const ARP& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ARP&);

  public:
    ARP(const char *name=nullptr, short kind=0);
    ARP(const ARP& other);
    virtual ~ARP();
    ARP& operator=(const ARP& other);
    virtual ARP *dup() const override {return new ARP(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned short getOpcode() const;
    virtual void setOpcode(unsigned short opcode);
    virtual unsigned int getSrcMACArraySize() const;
    virtual unsigned char getSrcMAC(unsigned int k) const;
    virtual void setSrcMAC(unsigned int k, unsigned char srcMAC);
    virtual unsigned int getSrcIPArraySize() const;
    virtual unsigned char getSrcIP(unsigned int k) const;
    virtual void setSrcIP(unsigned int k, unsigned char srcIP);
    virtual unsigned int getTrgMACArraySize() const;
    virtual unsigned char getTrgMAC(unsigned int k) const;
    virtual void setTrgMAC(unsigned int k, unsigned char trgMAC);
    virtual unsigned int getTrgIPArraySize() const;
    virtual unsigned char getTrgIP(unsigned int k) const;
    virtual void setTrgIP(unsigned int k, unsigned char trgIP);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ARP& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ARP& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ARP_M_H

